// O(nlogn) Solution
int Solution::maximumGap(const vector<int> &A) {
    vector<pair<int,int>> v;
    for(int i=0;i<A.size();i++)
    v.push_back(make_pair(A[i],i));
    
    sort(v.begin(),v.end());
    int mx=v[A.size()-1].second;
    int ans=0;
    for(int i=A.size()-2;i>=0;i--)
    {
        ans=max(ans,mx-v[i].second);
        mx=max(mx,v[i].second);
    }
    return ans;
}




//O(n) solution

int Solution::maximumGap(const vector<int> &A) {
    int n=A.size();
    vector<int> mx(n);
    mx[n-1]=A[n-1];
    for(int i=n-2;i>=0;i--)
    mx[i]=max(A[i],mx[i+1]);
    
    int i=0,j=0;
    int ans=0;
    while(i<n&&j<n)
    {
        if(A[i]<=mx[j])
        {
            ans=max(ans,j-i);
            j++;
        }
        else
        i++;
    }
    return ans;
}
